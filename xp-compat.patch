diff --git a/CMakeLists.txt b/CMakeLists.txt
index 2f7e5ac..fff51e7 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -327,7 +327,7 @@ else ()
 
     # Compiler flags
     set(DEBUG_LEVEL 0 CACHE STRING "Select debug level for compilation. Use value in range 0â€“3.")
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fstrict-aliasing -Werror -Wundef -Wmissing-declarations -Winit-self -Wall -Wextra -Wshadow")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fstrict-aliasing -Wundef -Wmissing-declarations -Winit-self -Wall -Wextra -Wshadow")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-unknown-pragmas -Wno-missing-braces -Wno-comment -Wnonnull -Wno-unused-parameter -Wno-attributes")
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDEBUG=${DEBUG_LEVEL}")
 
diff --git a/CMakeLists_mingw.txt b/CMakeLists_mingw.txt
index 830c503..65253a5 100644
--- a/CMakeLists_mingw.txt
+++ b/CMakeLists_mingw.txt
@@ -15,7 +15,7 @@ else()
 endif(APPLE)
 
 # here is the target environment located
-SET(CMAKE_FIND_ROOT_PATH ${TARGET_ENVIRONMENT})
+#SET(CMAKE_FIND_ROOT_PATH ${TARGET_ENVIRONMENT})
 
 # adjust the default behaviour of the FIND_XXX() commands:
 # search headers and libraries in the target environment, search
diff --git a/src/openrct2-cli/CMakeLists.txt b/src/openrct2-cli/CMakeLists.txt
index 7fb991e..3e97f56 100644
--- a/src/openrct2-cli/CMakeLists.txt
+++ b/src/openrct2-cli/CMakeLists.txt
@@ -18,3 +18,7 @@ target_include_directories(${PROJECT_NAME} PRIVATE "${CMAKE_CURRENT_LIST_DIR}/..
 ipo_set_target_properties(${PROJECT_NAME})
 target_link_libraries(${PROJECT_NAME} libopenrct2 Threads::Threads)
 target_link_platform_libraries(${PROJECT_NAME})
+
+if (WIN32)
+    target_link_libraries(${PROJECT_NAME} shlwapi)
+endif ()
diff --git a/src/openrct2-ui/CMakeLists.txt b/src/openrct2-ui/CMakeLists.txt
index 3478684..8e1da8d 100644
--- a/src/openrct2-ui/CMakeLists.txt
+++ b/src/openrct2-ui/CMakeLists.txt
@@ -28,6 +28,7 @@ else ()
     endif ()
     if (NOT DISABLE_VORBIS)
         PKG_CHECK_MODULES(OGG REQUIRED IMPORTED_TARGET ogg)
+		PKG_CHECK_MODULES(VORBIS REQUIRED IMPORTED_TARGET vorbis)
         PKG_CHECK_MODULES(VORBISFILE REQUIRED IMPORTED_TARGET vorbisfile)
     endif ()
 endif ()
@@ -83,7 +84,7 @@ if (NOT DISABLE_VORBIS)
     if (NOT MSVC AND NOT WIN32)
         target_link_libraries(${PROJECT_NAME} PkgConfig::OGG PkgConfig::VORBISFILE)
     else ()
-        target_link_libraries(${PROJECT_NAME} ${OGG_LDFLAGS} ${VORBISFILE_LDFLAGS})
+        target_link_libraries(${PROJECT_NAME} ${OGG_LDFLAGS} ${VORBISFILE_LDFLAGS} ${VORBIS_LDFLAGS})
     endif ()
 endif ()
 
diff --git a/src/openrct2-ui/UiContext.Win32.cpp b/src/openrct2-ui/UiContext.Win32.cpp
index 90156d9..aa5b873 100644
--- a/src/openrct2-ui/UiContext.Win32.cpp
+++ b/src/openrct2-ui/UiContext.Win32.cpp
@@ -13,6 +13,7 @@
 // clang-format off
 #    include <windows.h>
 #    include <shellapi.h>
+#    include <shlobj.h>
 // clang-format on
 #    undef CreateWindow
 
@@ -126,6 +127,43 @@ namespace OpenRCT2::Ui
         std::string ShowFileDialogInternal(SDL_Window* window, const FileDialogDesc& desc, bool isFolder)
         {
             std::string resultFilename;
+#if 1
+            WCHAR path[MAX_PATH] = {};
+            if (isFolder)
+            {
+                BROWSEINFOW bi = {};
+                std::wstring wtitle = String::ToWideChar(desc.Title);
+                bi.hwndOwner = nullptr;
+                bi.pidlRoot = nullptr;
+                bi.pszDisplayName = path;
+                bi.lpszTitle = wtitle.c_str();
+                bi.ulFlags = BIF_USENEWUI;
+                bi.lpfn = nullptr;
+                bi.lParam = 0;
+                bi.iImage = 0;
+
+                PIDLIST_ABSOLUTE list = SHBrowseForFolderW(&bi);
+                if (list != NULL)
+                {
+                    SHGetPathFromIDListW(list, path);
+                    resultFilename = String::ToUtf8(path);
+                    MessageBoxW(NULL, path, NULL, MB_OK);
+                }
+            }
+            else
+            {
+                OPENFILENAMEW ofn = {};
+                ofn.lStructSize = sizeof(ofn);
+                ofn.lpstrFile = path;
+                ofn.nMaxFile = MAX_PATH;
+                //ofn.lpstrFileTitle = String::ToWideChar(desc.Title).c_str();
+                if (desc.Type == FileDialogType::Save)
+                    GetSaveFileNameW(&ofn);
+                else
+                    GetOpenFileNameW(&ofn);
+                resultFilename = String::ToUtf8(ofn.lpstrFile);
+            }
+#else
 
             CCoInitialize coInitialize(COINIT_APARTMENTTHREADED);
             if (coInitialize)
@@ -191,6 +229,7 @@ namespace OpenRCT2::Ui
                     }
                 }
             }
+#endif
             return resultFilename;
         }
 
diff --git a/src/openrct2/CMakeLists.txt b/src/openrct2/CMakeLists.txt
index 367939c..6f798db 100644
--- a/src/openrct2/CMakeLists.txt
+++ b/src/openrct2/CMakeLists.txt
@@ -63,10 +63,14 @@ if (NOT DISABLE_NETWORK AND WIN32)
     target_link_libraries(${PROJECT_NAME} ws2_32 crypt32 wldap32 version winmm imm32 advapi32 shell32 ole32)
 endif ()
 
+if (WIN32)
+    target_link_libraries(${PROJECT_NAME} shlwapi mbedtls mbedcrypto mbedx509)
+endif ()
+
 if (NOT DISABLE_HTTP)
-    if (WIN32)
-        target_link_libraries(${PROJECT_NAME} winhttp)
-    else ()
+    #if (WIN32)
+    #    target_link_libraries(${PROJECT_NAME} winhttp)
+    #else ()
         PKG_CHECK_MODULES(LIBCURL REQUIRED libcurl)
 
         target_include_directories(${PROJECT_NAME} SYSTEM PRIVATE ${LIBCURL_INCLUDE_DIRS})
@@ -76,7 +80,7 @@ if (NOT DISABLE_HTTP)
         else ()
             target_link_libraries(${PROJECT_NAME} ${LIBCURL_LIBRARIES})
         endif ()
-    endif ()
+    #endif ()
 endif ()
 
 if (NOT DISABLE_TTF)
@@ -137,6 +141,7 @@ if (STATIC)
                                      ${PNG_STATIC_LIBRARIES}
                                      ${ZLIB_STATIC_LIBRARIES}
                                      ${LIBZIP_STATIC_LIBRARIES})
+	set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -static")
 else ()
     if (NOT MSVC)
         target_link_libraries(${PROJECT_NAME}
@@ -153,7 +158,7 @@ endif ()
 
 if (MINGW)
     # Hardcode libraries used on mingw
-    target_link_libraries(${PROJECT_NAME} crypto ws2_32 tasn1 unistring iconv p11-kit hogweed gmp nettle)
+    target_link_libraries(${PROJECT_NAME} crypto ws2_32 iconv)
     # Link in libssp
     target_link_libraries(${PROJECT_NAME} -fstack-protector-strong)
 endif()
diff --git a/src/openrct2/core/Crypt.CNG.cpp b/src/openrct2/core/Crypt.CNG.cpp
index 7e0abf6..3dc97a9 100644
--- a/src/openrct2/core/Crypt.CNG.cpp
+++ b/src/openrct2/core/Crypt.CNG.cpp
@@ -7,7 +7,7 @@
  * OpenRCT2 is licensed under the GNU General Public License version 3.
  *****************************************************************************/
 
-#if !defined(DISABLE_NETWORK) && defined(_WIN32)
+#if 0
 
 #    include "Crypt.h"
 
diff --git a/src/openrct2/core/Crypt.OpenSSL.cpp b/src/openrct2/core/Crypt.OpenSSL.cpp
index c796129..44d683f 100644
--- a/src/openrct2/core/Crypt.OpenSSL.cpp
+++ b/src/openrct2/core/Crypt.OpenSSL.cpp
@@ -7,7 +7,7 @@
  * OpenRCT2 is licensed under the GNU General Public License version 3.
  *****************************************************************************/
 
-#if !defined(DISABLE_NETWORK) && !defined(_WIN32)
+#if !defined(DISABLE_NETWORK)
 
 #    pragma GCC diagnostic push
 #    pragma GCC diagnostic ignored "-Wdeprecated-declarations"
diff --git a/src/openrct2/core/Http.WinHttp.cpp b/src/openrct2/core/Http.WinHttp.cpp
index 742a5ef..a1dc445 100644
--- a/src/openrct2/core/Http.WinHttp.cpp
+++ b/src/openrct2/core/Http.WinHttp.cpp
@@ -7,7 +7,8 @@
  * OpenRCT2 is licensed under the GNU General Public License version 3.
  *****************************************************************************/
 
-#if !defined(DISABLE_HTTP) && defined(_WIN32)
+//#if !defined(DISABLE_HTTP) && defined(_WIN32)
+#if 0
 
 #    include "Http.h"
 
diff --git a/src/openrct2/core/Http.cURL.cpp b/src/openrct2/core/Http.cURL.cpp
index ec57f1c..7d3a99e 100644
--- a/src/openrct2/core/Http.cURL.cpp
+++ b/src/openrct2/core/Http.cURL.cpp
@@ -7,7 +7,7 @@
  * OpenRCT2 is licensed under the GNU General Public License version 3.
  *****************************************************************************/
 
-#if !defined(DISABLE_HTTP) && !defined(_WIN32)
+#if !defined(DISABLE_HTTP) /*&& !defined(_WIN32)*/
 
 #    include "Http.h"
 
@@ -112,6 +112,8 @@ namespace Http
         if (req.method == Method::PUT)
             curl_easy_setopt(curl, CURLOPT_UPLOAD, 1L);
 
+        curl_easy_setopt(curl, CURLOPT_VERBOSE, 1L);
+        curl_easy_setopt(curl, CURLOPT_CAINFO, "./cacert.pem");
         curl_easy_setopt(curl, CURLOPT_URL, req.url.c_str());
         curl_easy_setopt(curl, CURLOPT_FOLLOWLOCATION, true);
         curl_easy_setopt(curl, CURLOPT_WRITEFUNCTION, WriteData);
diff --git a/src/openrct2/network/Socket.cpp b/src/openrct2/network/Socket.cpp
index 29fc1bb..993509c 100644
--- a/src/openrct2/network/Socket.cpp
+++ b/src/openrct2/network/Socket.cpp
@@ -647,16 +647,19 @@ private:
         std::string result;
         if (addr->sin_family == AF_INET)
         {
-            char str[INET_ADDRSTRLEN]{};
-            inet_ntop(AF_INET, &addr->sin_addr, str, sizeof(str));
-            result = str;
+            //char str[INET_ADDRSTRLEN]{};
+            //inet_ntop(AF_INET, &addr->sin_addr, str, sizeof(str));
+            //result = str;
+            result = inet_ntoa(addr->sin_addr);
         }
         else if (addr->sin_family == AF_INET6)
         {
-            auto addrv6 = reinterpret_cast<const sockaddr_in6*>(&addr);
+            //auto addrv6 = reinterpret_cast<const sockaddr_in6*>(&addr);
             char str[INET6_ADDRSTRLEN]{};
-            inet_ntop(AF_INET6, &addrv6->sin6_addr, str, sizeof(str));
-            result = str;
+            //inet_ntop(AF_INET6, &addrv6->sin6_addr, str, sizeof(str));
+            DWORD len = sizeof(str);
+            WSAAddressToStringA(const_cast<sockaddr *>(reinterpret_cast<const sockaddr *>(addr)), sizeof(sockaddr_in6), nullptr, str, &len);
+			result = str;
         }
         return result;
     }
diff --git a/src/openrct2/platform/Platform.Win32.cpp b/src/openrct2/platform/Platform.Win32.cpp
index 96c3c56..1acd3aa 100644
--- a/src/openrct2/platform/Platform.Win32.cpp
+++ b/src/openrct2/platform/Platform.Win32.cpp
@@ -47,6 +47,8 @@ static constexpr wchar_t SINGLE_INSTANCE_MUTEX_NAME[] = L"RollerCoaster Tycoon 2
 #    define SOFTWARE_CLASSES L"Software\\Classes"
 #    define MUI_CACHE L"Local Settings\\Software\\Microsoft\\Windows\\Shell\\MuiCache"
 
+#define swprintf_s swprintf
+
 namespace Platform
 {
     static std::string WIN32_GetKnownFolderPath(REFKNOWNFOLDERID rfid);
@@ -662,10 +663,14 @@ namespace Platform
         //
         wchar_t first[std::size(dateFormat)];
         wchar_t second[std::size(dateFormat)];
+#if 0
         if (swscanf_s(
                 dateFormat, L"%l[dyM]%*l[^dyM]%l[dyM]%*l[^dyM]%*l[dyM]", first, static_cast<uint32_t>(std::size(first)), second,
                 static_cast<uint32_t>(std::size(second)))
             != 2)
+#else
+        if (swscanf(dateFormat, L"%l[dyM]%*l[^dyM]%l[dyM]%*l[^dyM]%*l[dyM]", first, second) != 2)
+#endif
         {
             return DATE_FORMAT_DAY_MONTH_YEAR;
         }
diff --git a/src/openrct2/platform/nt51shim.cpp b/src/openrct2/platform/nt51shim.cpp
new file mode 100644
index 0000000..732aa7c
--- /dev/null
+++ b/src/openrct2/platform/nt51shim.cpp
@@ -0,0 +1,140 @@
+// API shims for Windows XP compatibility
+#include <windows.h>
+#include <shlobj.h>
+#include <shlwapi.h>
+
+#include <stdio.h>
+#include <string.h>
+
+extern "C" {
+
+// Creates a fake import (basically a function pointer) for the function to override the DLL import with our own implementation
+#define DLL_OVERRIDE(name, argbytes) typeof(name) *name##_ptr asm("__imp__"#name"@"#argbytes) = name;
+
+static LCID locale_name_to_id(LPCWSTR lpLocaleName)
+{
+    if (lpLocaleName == LOCALE_NAME_USER_DEFAULT)  // LOCALE_NAME_USER_DEFAULT is equal to NULL
+        return LOCALE_USER_DEFAULT;
+    else if (wcscmp(lpLocaleName, LOCALE_NAME_INVARIANT) == 0)
+        return LOCALE_INVARIANT;
+    else if (wcscmp(lpLocaleName, LOCALE_NAME_SYSTEM_DEFAULT) == 0)
+        return LOCALE_SYSTEM_DEFAULT;
+    return 0xFFFFFFFF;  // something invalid
+}
+
+int WINAPI GetDateFormatEx(
+  LPCWSTR          lpLocaleName,
+  DWORD            dwFlags,
+  const SYSTEMTIME *lpDate,
+  LPCWSTR          lpFormat,
+  LPWSTR           lpDateStr,
+  int              cchDate,
+  LPCWSTR          lpCalendar)
+{
+    wprintf(L"shim: GetDateFormatEx(\"%s\", %u, %p, \"%s\", %p, %i, \"%s\")\n", lpLocaleName, dwFlags, lpDate, lpFormat, lpDateStr, cchDate, lpCalendar);
+    return GetDateFormatW(locale_name_to_id(lpLocaleName), dwFlags, lpDate, lpFormat, lpDateStr, cchDate);
+}
+
+DLL_OVERRIDE(GetDateFormatEx,28)
+
+int WINAPI GetTimeFormatEx(
+  LPCWSTR          lpLocaleName,
+  DWORD            dwFlags,
+  const SYSTEMTIME *lpTime,
+  LPCWSTR          lpFormat,
+  LPWSTR           lpTimeStr,
+  int              cchTime)
+{
+    wprintf(L"shim: GetTimeFormatEx(\"%s\", %u, %p, \"%s\", %p, %i)\n", lpLocaleName, dwFlags, lpTime, lpFormat, lpTimeStr, cchTime);
+    return GetTimeFormatW(locale_name_to_id(lpLocaleName), dwFlags, lpTime, lpFormat, lpTimeStr, cchTime);
+}
+
+DLL_OVERRIDE(GetTimeFormatEx,24)
+
+int WINAPI GetLocaleInfoEx(
+  LPCWSTR lpLocaleName,
+  LCTYPE  LCType,
+  LPWSTR  lpLCData,
+  int     cchData)
+{
+    wprintf(L"shim: GetLocaleInfoEx(\"%s\", %u, %p, %i)\n", lpLocaleName, LCType, lpLCData, cchData);
+    return GetLocaleInfoW(locale_name_to_id(lpLocaleName), LCType, lpLCData, cchData);
+}
+
+DLL_OVERRIDE(GetLocaleInfoEx,16)
+
+int WINAPI LCMapStringEx(
+  LPCWSTR          lpLocaleName,
+  DWORD            dwMapFlags,
+  LPCWSTR          lpSrcStr,
+  int              cchSrc,
+  LPWSTR           lpDestStr,
+  int              cchDest,
+  LPNLSVERSIONINFO lpVersionInformation,
+  LPVOID           lpReserved,
+  LPARAM           sortHandle)
+{
+    wprintf(L"shim: LCMapStringEx(\"%s\", %u, \"%s\", %i, %p, %i)\n", lpLocaleName, dwMapFlags, lpSrcStr, cchSrc, lpDestStr, cchDest);
+    return LCMapStringW(locale_name_to_id(lpLocaleName), dwMapFlags, lpSrcStr, cchSrc, lpDestStr, cchDest);
+}
+
+DLL_OVERRIDE(LCMapStringEx,36)
+
+LSTATUS WINAPI RegDeleteTreeW(
+  HKEY    hKey,
+  LPCWSTR lpSubKey)
+{
+    wprintf(L"shim: RegDeleteTreeW(0x%X, \"%s\")\n", hKey, lpSubKey);
+    // Note: SHDeleteKey will also remove the key itself, while RegDeleteTree just removes its contents.
+    return SHDeleteKeyW(hKey, lpSubKey);
+}
+
+DLL_OVERRIDE(RegDeleteTreeW,8)
+
+LSTATUS WINAPI RegSetKeyValueW(
+  HKEY    hKey,
+  LPCWSTR lpSubKey,
+  LPCWSTR lpValueName,
+  DWORD   dwType,
+  LPCVOID lpData,
+  DWORD   cbData
+)
+{
+	wprintf(L"shim (unimplemented): RegSetKeyValueW(0x%x, \"%s\", \"%s\", %u, %p, %u)\n", hKey, lpSubKey, lpValueName, dwType, lpData, cbData);
+	// TODO: implement
+	return ERROR_CALL_NOT_IMPLEMENTED;
+}
+
+DLL_OVERRIDE(RegSetKeyValueW,24)
+
+HRESULT WINAPI SHGetKnownFolderPath(
+  REFKNOWNFOLDERID rfid,
+  DWORD            dwFlags,
+  HANDLE           hToken,
+  PWSTR            *ppszPath)
+{
+    wprintf(L"shim: SHGetKnownFolderPath(%p, %u, %p, %p)\n", rfid, dwFlags, hToken, ppszPath);
+    int csidl = -1;
+    if (rfid == FOLDERID_Documents)         csidl = CSIDL_MYDOCUMENTS;
+    else if (rfid == FOLDERID_Fonts)        csidl = CSIDL_FONTS;
+    else if (rfid == FOLDERID_LocalAppData) csidl = CSIDL_LOCAL_APPDATA;
+    else if (rfid == FOLDERID_Profile)      csidl = CSIDL_PROFILE;
+    *ppszPath = (PWSTR)CoTaskMemAlloc(MAX_PATH * sizeof(WCHAR));
+    return SHGetFolderPathW(NULL, csidl, hToken, SHGFP_TYPE_CURRENT, *ppszPath);
+}
+
+DLL_OVERRIDE(SHGetKnownFolderPath,16)
+
+BOOL WINAPI CancelIoEx(
+  HANDLE       hFile,
+  LPOVERLAPPED lpOverlapped)
+{
+    printf("shim: CancelIoEx(%p, %p)\n", hFile, lpOverlapped);
+    // TODO: CancelIo does not work on handles created on a different thread!
+    // Not sure if that functionality is needed.
+    return CancelIo(hFile);
+}
+
+DLL_OVERRIDE(CancelIoEx,8)
+
+}
